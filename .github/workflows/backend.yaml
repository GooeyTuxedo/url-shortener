name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.2.8'
          enable-stack: true

      - name: Cache Haskell dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.stack
            backend/.stack-work
          key: ${{ runner.os }}-stack-${{ hashFiles('backend/stack.yaml', 'backend/package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-stack-

      - name: Run backend tests
        working-directory: ./backend
        run: stack test

  build-and-push:
    # needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Set lowercase repository name for Docker
      - name: Set lowercase repository name
        run: |
          echo "BACKEND_IMAGE_NAME=$(echo ${{ env.REPO_NAME }} | tr '[:upper:]' '[:lower:]')-backend" >> $GITHUB_ENV

      - name: Extract metadata for Docker
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Log image info
        if: success()
        run: |
          IMAGE_TAG=$(echo ${{ steps.meta-backend.outputs.tags }} | cut -d' ' -f1)
          echo "Backend image $IMAGE_TAG published successfully"
          echo "ArgoCD Image Updater will automatically update deployments"