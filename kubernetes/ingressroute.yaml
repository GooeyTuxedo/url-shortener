apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: url-shortener-api
  namespace: url-shortener
spec:
  entryPoints:
    - websecure
  routes:
    # API routes - highest priority
    - match: Host(`short.based.consulting`) && PathPrefix(`/api`)
      kind: Rule
      priority: 100
      services:
        - name: url-shortener-backend
          port: 80
  tls:
    secretName: url-shortener-tls

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: url-shortener-assets
  namespace: url-shortener
spec:
  entryPoints:
    - websecure
  routes:
    # Static assets with dedicated path - high priority
    - match: Host(`short.based.consulting`) && PathPrefix(`/assets`)
      kind: Rule
      priority: 50
      services:
        - name: url-shortener-frontend
          port: 80
      middlewares:
        - name: url-shortener-compress
  tls:
    secretName: url-shortener-tls

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: url-shortener-shortcodes
  namespace: url-shortener
spec:
  entryPoints:
    - websecure
  routes:
    # We're capturing all single-segment paths without dots 
    # (not matching static assets which contain dots)
    - match: Host(`short.based.consulting`) && Path(`/{shortcode:[a-zA-Z0-9]{1,12}}`)
      kind: Rule
      priority: 30
      services:
        - name: url-shortener-backend
          port: 80
  tls:
    secretName: url-shortener-tls

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: url-shortener-frontend
  namespace: url-shortener
spec:
  entryPoints:
    - websecure
  routes:
    # Frontend app - catches everything else (lowest priority)
    - match: Host(`short.based.consulting`)
      kind: Rule
      priority: 10
      services:
        - name: url-shortener-frontend
          port: 80
      middlewares:
        - name: url-shortener-compress
        - name: url-shortener-spa
  tls:
    secretName: url-shortener-tls